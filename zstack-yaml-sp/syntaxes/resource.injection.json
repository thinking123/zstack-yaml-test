{
  "name": "yaml-injection",
  "scopeName": "yaml.injection",
  "injectionSelector": "source.yaml",
  "patterns": [
    {
      "include": "#resource"
    },
    {
      "include": "#action"
    },
    {
      "include": "#action-alias"
    },
    {
      "include": "#varible"
    },
    {
      "include": "#number"
    },
    {
      "include": "#boolean"
    },
    {
      "include": "#null"
    },
    {
      "include": "#undefined"
    },
    {
      "include": "#hash"
    },
    {
      "include": "#string-unquoted"
    },
    {
      "include": "#string-quoted"
    },
    {
      "include": "#comment"
    }
  ],
  "repository": {
    "resource": {
      "patterns": [
        {
          "name": "support.class.resource.yaml",
          "match": "Zone|InstanceOffering|DiskOffering|VRouterOffering|VpcVRouter|ImageStoreBackUpStorage|Image|CephPrimaryStorage|CephPrimaryStoragePoolAndMon|CephBackupStorage|SharedBlockGroupPrimaryStorage|SharedMountPointPrimaryStorage|NfsPrimaryStorage|PrimaryStorage|L2NoVlanNetwork|L2VlanNetwork|L2VxlanNetworkPool|L3Network|IpRange|AutoScalingGroup|Cluster|Host|Vm|Volume|LocalStorage|CdRom|Account|Project|ProjectUser|IAM2VirtualID|IAM2Organization|IAM2ProjectTemplate|IAM2VirtualIDGroup|IAM2ProjectRole|Vip|IPsecConnection|Qos|Eip|SharedResource|AffinityGroup|IpBlackWhiteList|AccesskeyManagement|Tag|SecurityGroup|SchedulerJob|SchedulerTrigger|OSPF|IAM2Project|Alarm|SubscribeEvent|PriceTable|VRouterRouteTable|NetflowMeter|StackTemplate|SNSTextTemplate|AliyunSmsSNSTextTemplate|LogServer|ProcessManagement|VpcHaGroup|VolumeSnapshot|EmailServer|PreConfigTemplate|VolumeSnapshotGroup|MulticastRouter"
        }
      ]
    },
    "action": {
      "patterns": [
        {
          "name": "support.function.action.yaml",
          "match": "\\b(?:(?>Set|Attach|Add)\\w+)"
        }
      ]
    },
    "action-alias": {
      "begin": "\\b([A-Z]\\w+)(\\()",
      "end": "\\)",
      "beginCaptures": {
        "1": { "name": "support.function.action.yaml" },
        "2": { "name": "punctuation.paren.open.yaml" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.paren.close.yaml" }
      },
      "patterns": [
        {
          "name": "keyword.constant.yaml",
          "match": "action"
        }
      ]
    },
    "varible": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "punctuation.paren.open.yaml" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.paren.close.yaml" }
      },
      "patterns": [
        {
          "name": "support.variable.yaml",
          "match": "(?!action)\\w+"
        }
      ]
    },
    "hash": {
      "patterns": [
        {
          "name": "entity.name.tag.yaml",
          "match": "\\b[a-z]\\w+(?=:)"
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "name": "constant.numeric.integer.yaml",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "boolean": {
      "patterns": [
        {
          "name": "constant.language.boolean.yaml",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "null": {
      "patterns": [
        {
          "name": "constant.language.null.yaml",
          "match": "\\bnull\\b"
        }
      ]
    },
    "undefined": {
      "patterns": [
        {
          "name": "constant.language.yaml",
          "match": "\\b(undefined)\\b"
        }
      ]
    },
    "comment": {
      "begin": "\\#",
      "end": "\\$",
      "beginCaptures": {
        "0": { "name": "comment.line.number-sign.yaml" }
      },
      "patterns": [
        {
          "name": "comment.line.number-sign.yaml",
          "match": ".*"
        }
      ]
    },
    "string-unquoted": {
      "patterns": [
        {
          "name": "string.unquoted.plain.out.yaml",
          "match": "\\b[a-z]\\w*\\b"
        }
      ]
    },
    "string-quoted": {
      "begin": "(?>\"|\\')",
      "end": "^\\1",
      "beginCaptures": {
        "1": { "name": "punctuation.definition.string.begin.yaml" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.definition.string.end.yaml" }
      },
      "name": "string.quoted.yaml",
      "patterns": [
        {
          "name": "string.unquoted.plain.out.yaml",
          "match": "\\w+"
        }
      ]
    }
  }
}
